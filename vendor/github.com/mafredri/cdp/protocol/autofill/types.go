// Code generated by cdpgen. DO NOT EDIT.

package autofill

import (
	"github.com/mafredri/cdp/protocol/dom"
	"github.com/mafredri/cdp/protocol/page"
)

// CreditCard
type CreditCard struct {
	Number      string `json:"number"`      // 16-digit credit card number.
	Name        string `json:"name"`        // Name of the credit card owner.
	ExpiryMonth string `json:"expiryMonth"` // 2-digit expiry month.
	ExpiryYear  string `json:"expiryYear"`  // 4-digit expiry year.
	CVC         string `json:"cvc"`         // 3-digit card verification code.
}

// AddressField
type AddressField struct {
	Name  string `json:"name"`  // address field name, for example GIVEN_NAME.
	Value string `json:"value"` // address field value, for example Jon Doe.
}

// AddressFields A list of address fields.
type AddressFields struct {
	Fields []AddressField `json:"fields"` // No description.
}

// Address
type Address struct {
	Fields []AddressField `json:"fields"` // fields and values defining an address.
}

// AddressUI Defines how an address can be displayed like in
// chrome://settings/addresses. Address UI is a two dimensional array, each
// inner array is an "address information line", and when rendered in a UI
// surface should be displayed as such. The following address UI for instance:
// [[{name: "GIVE_NAME", value: "Jon"}, {name: "FAMILY_NAME", value: "Doe"}],
// [{name: "CITY", value: "Munich"}, {name: "ZIP", value: "81456"}]] should
// allow the receiver to render: Jon Doe Munich 81456
type AddressUI struct {
	AddressFields []AddressFields `json:"addressFields"` // A two dimension array containing the representation of values from an address profile.
}

// FillingStrategy Specified whether a filled field was done so by using the
// html autocomplete attribute or autofill heuristics.
type FillingStrategy string

// FillingStrategy as enums.
const (
	FillingStrategyNotSet                FillingStrategy = ""
	FillingStrategyAutocompleteAttribute FillingStrategy = "autocompleteAttribute"
	FillingStrategyAutofillInferred      FillingStrategy = "autofillInferred"
)

func (e FillingStrategy) Valid() bool {
	switch e {
	case "autocompleteAttribute", "autofillInferred":
		return true
	default:
		return false
	}
}

func (e FillingStrategy) String() string {
	return string(e)
}

// FilledField
type FilledField struct {
	HTMLType        string            `json:"htmlType"`        // The type of the field, e.g text, password etc.
	ID              string            `json:"id"`              // the html id
	Name            string            `json:"name"`            // the html name
	Value           string            `json:"value"`           // the field value
	AutofillType    string            `json:"autofillType"`    // The actual field type, e.g FAMILY_NAME
	FillingStrategy FillingStrategy   `json:"fillingStrategy"` // The filling strategy
	FrameID         page.FrameID      `json:"frameId"`         // The frame the field belongs to
	FieldID         dom.BackendNodeID `json:"fieldId"`         // The form field's DOM node
}
