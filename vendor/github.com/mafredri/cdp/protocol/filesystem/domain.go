// Code generated by cdpgen. DO NOT EDIT.

// Package filesystem implements the FileSystem domain.
package filesystem

import (
	"context"

	"github.com/mafredri/cdp/protocol/internal"
	"github.com/mafredri/cdp/rpcc"
)

// domainClient is a client for the FileSystem domain.
type domainClient struct{ conn *rpcc.Conn }

// NewClient returns a client for the FileSystem domain with the connection set to conn.
func NewClient(conn *rpcc.Conn) *domainClient {
	return &domainClient{conn: conn}
}

// GetDirectory invokes the FileSystem method.
func (d *domainClient) GetDirectory(ctx context.Context, args *GetDirectoryArgs) (reply *GetDirectoryReply, err error) {
	reply = new(GetDirectoryReply)
	if args != nil {
		err = rpcc.Invoke(ctx, "FileSystem.getDirectory", args, reply, d.conn)
	} else {
		err = rpcc.Invoke(ctx, "FileSystem.getDirectory", nil, reply, d.conn)
	}
	if err != nil {
		err = &internal.OpError{Domain: "FileSystem", Op: "GetDirectory", Err: err}
	}
	return
}
