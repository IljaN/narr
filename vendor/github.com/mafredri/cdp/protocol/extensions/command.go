// Code generated by cdpgen. DO NOT EDIT.

package extensions

import (
	"encoding/json"
)

// LoadUnpackedArgs represents the arguments for LoadUnpacked in the Extensions domain.
type LoadUnpackedArgs struct {
	Path string `json:"path"` // Absolute file path.
}

// NewLoadUnpackedArgs initializes LoadUnpackedArgs with the required arguments.
func NewLoadUnpackedArgs(path string) *LoadUnpackedArgs {
	args := new(LoadUnpackedArgs)
	args.Path = path
	return args
}

// LoadUnpackedReply represents the return values for LoadUnpacked in the Extensions domain.
type LoadUnpackedReply struct {
	ID string `json:"id"` // Extension id.
}

// GetStorageItemsArgs represents the arguments for GetStorageItems in the Extensions domain.
type GetStorageItemsArgs struct {
	ID          string      `json:"id"`             // ID of extension.
	StorageArea StorageArea `json:"storageArea"`    // StorageArea to retrieve data from.
	Keys        []string    `json:"keys,omitempty"` // Keys to retrieve.
}

// NewGetStorageItemsArgs initializes GetStorageItemsArgs with the required arguments.
func NewGetStorageItemsArgs(id string, storageArea StorageArea) *GetStorageItemsArgs {
	args := new(GetStorageItemsArgs)
	args.ID = id
	args.StorageArea = storageArea
	return args
}

// SetKeys sets the Keys optional argument. Keys to retrieve.
func (a *GetStorageItemsArgs) SetKeys(keys []string) *GetStorageItemsArgs {
	a.Keys = keys
	return a
}

// GetStorageItemsReply represents the return values for GetStorageItems in the Extensions domain.
type GetStorageItemsReply struct {
	Data json.RawMessage `json:"data"` // No description.
}

// RemoveStorageItemsArgs represents the arguments for RemoveStorageItems in the Extensions domain.
type RemoveStorageItemsArgs struct {
	ID          string      `json:"id"`          // ID of extension.
	StorageArea StorageArea `json:"storageArea"` // StorageArea to remove data from.
	Keys        []string    `json:"keys"`        // Keys to remove.
}

// NewRemoveStorageItemsArgs initializes RemoveStorageItemsArgs with the required arguments.
func NewRemoveStorageItemsArgs(id string, storageArea StorageArea, keys []string) *RemoveStorageItemsArgs {
	args := new(RemoveStorageItemsArgs)
	args.ID = id
	args.StorageArea = storageArea
	args.Keys = keys
	return args
}

// ClearStorageItemsArgs represents the arguments for ClearStorageItems in the Extensions domain.
type ClearStorageItemsArgs struct {
	ID          string      `json:"id"`          // ID of extension.
	StorageArea StorageArea `json:"storageArea"` // StorageArea to remove data from.
}

// NewClearStorageItemsArgs initializes ClearStorageItemsArgs with the required arguments.
func NewClearStorageItemsArgs(id string, storageArea StorageArea) *ClearStorageItemsArgs {
	args := new(ClearStorageItemsArgs)
	args.ID = id
	args.StorageArea = storageArea
	return args
}

// SetStorageItemsArgs represents the arguments for SetStorageItems in the Extensions domain.
type SetStorageItemsArgs struct {
	ID          string          `json:"id"`          // ID of extension.
	StorageArea StorageArea     `json:"storageArea"` // StorageArea to set data in.
	Values      json.RawMessage `json:"values"`      // Values to set.
}

// NewSetStorageItemsArgs initializes SetStorageItemsArgs with the required arguments.
func NewSetStorageItemsArgs(id string, storageArea StorageArea, values json.RawMessage) *SetStorageItemsArgs {
	args := new(SetStorageItemsArgs)
	args.ID = id
	args.StorageArea = storageArea
	args.Values = values
	return args
}
