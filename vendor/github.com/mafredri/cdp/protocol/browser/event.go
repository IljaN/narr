// Code generated by cdpgen. DO NOT EDIT.

package browser

import (
	"github.com/mafredri/cdp/protocol/page"
	"github.com/mafredri/cdp/rpcc"
)

// DownloadWillBeginClient is a client for DownloadWillBegin events. Fired
// when page is about to start a download.
type DownloadWillBeginClient interface {
	// Recv calls RecvMsg on rpcc.Stream, blocks until the event is
	// triggered, context canceled or connection closed.
	Recv() (*DownloadWillBeginReply, error)
	rpcc.Stream
}

// DownloadWillBeginReply is the reply for DownloadWillBegin events.
type DownloadWillBeginReply struct {
	FrameID           page.FrameID `json:"frameId"`           // Id of the frame that caused the download to begin.
	GUID              string       `json:"guid"`              // Global unique identifier of the download.
	URL               string       `json:"url"`               // URL of the resource being downloaded.
	SuggestedFilename string       `json:"suggestedFilename"` // Suggested file name of the resource (the actual name of the file saved on disk may differ).
}

// DownloadProgressClient is a client for DownloadProgress events. Fired when
// download makes progress. Last call has |done| == true.
type DownloadProgressClient interface {
	// Recv calls RecvMsg on rpcc.Stream, blocks until the event is
	// triggered, context canceled or connection closed.
	Recv() (*DownloadProgressReply, error)
	rpcc.Stream
}

// DownloadProgressReply is the reply for DownloadProgress events.
type DownloadProgressReply struct {
	GUID          string  `json:"guid"`          // Global unique identifier of the download.
	TotalBytes    float64 `json:"totalBytes"`    // Total expected bytes to download.
	ReceivedBytes float64 `json:"receivedBytes"` // Total bytes received.
	// State Download status.
	//
	// Values: "inProgress", "completed", "canceled".
	State string `json:"state"`
}
