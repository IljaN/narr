// Code generated by cdpgen. DO NOT EDIT.

package target

import (
	"github.com/mafredri/cdp/protocol/internal"
	"github.com/mafredri/cdp/protocol/page"
)

// ID
type ID string

// SessionID Unique identifier of attached debugging session.
type SessionID string

// Info
type Info struct {
	TargetID ID     `json:"targetId"`           // No description.
	Type     string `json:"type"`               // List of types: https://source.chromium.org/chromium/chromium/src/+/main:content/browser/devtools/devtools_agent_host_impl.cc?ss=chromium&q=f:devtools%20-f:out%20%22::kTypeTab%5B%5D%22
	Title    string `json:"title"`              // No description.
	URL      string `json:"url"`                // No description.
	Attached bool   `json:"attached"`           // Whether the target has an attached client.
	OpenerID *ID    `json:"openerId,omitempty"` // Opener target Id
	// CanAccessOpener Whether the target has access to the originating
	// window.
	//
	// Note: This property is experimental.
	CanAccessOpener bool `json:"canAccessOpener"`
	// OpenerFrameID Frame id of originating window (is only set if target
	// has an opener).
	//
	// Note: This property is experimental.
	OpenerFrameID *page.FrameID `json:"openerFrameId,omitempty"`
	// BrowserContextID
	//
	// Note: This property is experimental.
	BrowserContextID *internal.BrowserContextID `json:"browserContextId,omitempty"`
	// Subtype Provides additional details for specific target types. For
	// example, for the type of "page", this may be set to "prerender".
	//
	// Note: This property is experimental.
	Subtype *string `json:"subtype,omitempty"`
}

// FilterEntry A filter used by target query/discovery/auto-attach operations.
//
// Note: This type is experimental.
type FilterEntry struct {
	Exclude *bool   `json:"exclude,omitempty"` // If set, causes exclusion of matching targets from the list.
	Type    *string `json:"type,omitempty"`    // If not present, matches any type.
}

// Filter The entries in TargetFilter are matched sequentially against targets
// and the first entry that matches determines if the target is included or
// not, depending on the value of `exclude` field in the entry. If filter is
// not specified, the one assumed is [{type: "browser", exclude: true}, {type:
// "tab", exclude: true}, {}] (i.e. include everything but `browser` and
// `tab`).
//
// Note: This type is experimental.
type Filter []FilterEntry

// RemoteLocation
//
// Note: This type is experimental.
type RemoteLocation struct {
	Host string `json:"host"` // No description.
	Port int    `json:"port"` // No description.
}
