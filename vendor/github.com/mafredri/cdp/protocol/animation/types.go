// Code generated by cdpgen. DO NOT EDIT.

package animation

import (
	"github.com/mafredri/cdp/protocol/dom"
)

// Animation Animation instance.
type Animation struct {
	ID           string  `json:"id"`           // `Animation`'s id.
	Name         string  `json:"name"`         // `Animation`'s name.
	PausedState  bool    `json:"pausedState"`  // `Animation`'s internal paused state.
	PlayState    string  `json:"playState"`    // `Animation`'s play state.
	PlaybackRate float64 `json:"playbackRate"` // `Animation`'s playback rate.
	StartTime    float64 `json:"startTime"`    // `Animation`'s start time. Milliseconds for time based animations and percentage [0 - 100] for scroll driven animations (i.e. when viewOrScrollTimeline exists).
	CurrentTime  float64 `json:"currentTime"`  // `Animation`'s current time.
	// Type Animation type of `Animation`.
	//
	// Values: "CSSTransition", "CSSAnimation", "WebAnimation".
	Type                 string                `json:"type"`
	Source               *Effect               `json:"source,omitempty"`               // `Animation`'s source animation node.
	CSSID                *string               `json:"cssId,omitempty"`                // A unique ID for `Animation` representing the sources that triggered this CSS animation/transition.
	ViewOrScrollTimeline *ViewOrScrollTimeline `json:"viewOrScrollTimeline,omitempty"` // View or scroll timeline
}

// ViewOrScrollTimeline Timeline instance
type ViewOrScrollTimeline struct {
	SourceNodeID  *dom.BackendNodeID    `json:"sourceNodeId,omitempty"`  // Scroll container node
	StartOffset   *float64              `json:"startOffset,omitempty"`   // Represents the starting scroll position of the timeline as a length offset in pixels from scroll origin.
	EndOffset     *float64              `json:"endOffset,omitempty"`     // Represents the ending scroll position of the timeline as a length offset in pixels from scroll origin.
	SubjectNodeID *dom.BackendNodeID    `json:"subjectNodeId,omitempty"` // The element whose principal box's visibility in the scrollport defined the progress of the timeline. Does not exist for animations with ScrollTimeline
	Axis          dom.ScrollOrientation `json:"axis"`                    // Orientation of the scroll
}

// Effect AnimationEffect instance
type Effect struct {
	Delay          float64            `json:"delay"`                   // `AnimationEffect`'s delay.
	EndDelay       float64            `json:"endDelay"`                // `AnimationEffect`'s end delay.
	IterationStart float64            `json:"iterationStart"`          // `AnimationEffect`'s iteration start.
	Iterations     float64            `json:"iterations"`              // `AnimationEffect`'s iterations.
	Duration       float64            `json:"duration"`                // `AnimationEffect`'s iteration duration. Milliseconds for time based animations and percentage [0 - 100] for scroll driven animations (i.e. when viewOrScrollTimeline exists).
	Direction      string             `json:"direction"`               // `AnimationEffect`'s playback direction.
	Fill           string             `json:"fill"`                    // `AnimationEffect`'s fill mode.
	BackendNodeID  *dom.BackendNodeID `json:"backendNodeId,omitempty"` // `AnimationEffect`'s target node.
	KeyframesRule  *KeyframesRule     `json:"keyframesRule,omitempty"` // `AnimationEffect`'s keyframes.
	Easing         string             `json:"easing"`                  // `AnimationEffect`'s timing function.
}

// KeyframesRule Keyframes Rule
type KeyframesRule struct {
	Name      *string         `json:"name,omitempty"` // CSS keyframed animation's name.
	Keyframes []KeyframeStyle `json:"keyframes"`      // List of animation keyframes.
}

// KeyframeStyle Keyframe Style
type KeyframeStyle struct {
	Offset string `json:"offset"` // Keyframe's time offset.
	Easing string `json:"easing"` // `AnimationEffect`'s timing function.
}
